// Code generated by goctl. DO NOT EDIT.
// Source: demo.proto

package rpcdemo

import (
	rpc_demo2 "api-demo/pb/rpc-demo"
	"context"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	HelloRequest  = rpc_demo2.HelloRequest
	HelloResponse = rpc_demo2.HelloResponse

	RpcDemo interface {
		Hello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error)
	}

	defaultRpcDemo struct {
		cli zrpc.Client
	}
)

func NewRpcDemo(cli zrpc.Client) RpcDemo {
	return &defaultRpcDemo{
		cli: cli,
	}
}

func (m *defaultRpcDemo) Hello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error) {
	client := rpc_demo2.NewRpcDemoClient(m.cli.Conn())
	return client.Hello(ctx, in, opts...)
}
